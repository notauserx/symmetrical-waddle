// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Context.Migrations.Migrations
{
    [DbContext(typeof(CarRentalsContext))]
    [Migration("20221107030828_AddIsDeactivatedToListings")]
    partial class AddIsDeactivatedToListings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.CarListing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("bit");

                    b.Property<string>("MaKe")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CarListings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a87c369-0e77-497c-8af0-660cf0fafbf4"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Camry",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("ffc9510d-4c6a-4a4d-8774-d6d647138d06"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Camry",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("18c55c75-9ef4-4486-afc6-0facda23005d"),
                            IsDeactivated = false,
                            MaKe = "Ford",
                            Model = "Focus",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("54c9131c-0392-4155-9565-49d1ebaf7379"),
                            IsDeactivated = false,
                            MaKe = "Ford",
                            Model = "Mustang",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("7cfba5c5-e1ee-4ab4-a4d0-9bc3dd352187"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Prius",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("ca5ed291-5b42-4276-a726-411f65900e58"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Avalon",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("7587c496-5e9e-4cb0-896e-b5215dd3375b"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Yaris",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("497fba56-227f-4a80-8e61-cf91e4aabc4e"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "C-HR",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("35798331-b5aa-4b40-92f5-36254888e62d"),
                            IsDeactivated = false,
                            MaKe = "Hyundai",
                            Model = "Sonata",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("ea619497-88c1-4886-8bc4-c63ab363f872"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Camry",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("035bea3a-034a-41b4-8457-90fc4b0df2be"),
                            IsDeactivated = false,
                            MaKe = "Toyota",
                            Model = "Camry",
                            UserId = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            Year = 2022
                        });
                });

            modelBuilder.Entity("Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("874313be-3037-4fb6-be0b-285f1f5e9c3e"),
                            DisplayName = "Admin",
                            Email = "admin@carrentalcorporation.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("fab81e4b-89d8-43dd-9567-8ffadad4ea33"),
                            DisplayName = "Developer",
                            Email = "janedoe@carrentalcorporation.com",
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("0aed55c3-b593-49da-b1ff-6532fc46b6c4"),
                            DisplayName = "Bill Autos",
                            Email = "billieHay@somedomain.com",
                            FirstName = "Bill",
                            LastName = "Hayden"
                        },
                        new
                        {
                            Id = new Guid("ceae382c-70f8-46d1-8ec1-cb7d3b4abd9f"),
                            DisplayName = "Autos at High Park Blvd",
                            Email = "careronyo@autosathighpark.com",
                            FirstName = "Cameron",
                            LastName = "Yo"
                        },
                        new
                        {
                            Id = new Guid("745ee7e0-d756-485f-8f1d-8b2bccc007fe"),
                            DisplayName = "Customer",
                            Email = "oOliviaO@somedomain.com",
                            FirstName = "Olivia",
                            LastName = "Spencer"
                        },
                        new
                        {
                            Id = new Guid("50ec3410-bf52-4cc6-b7bf-61e306b92593"),
                            DisplayName = "Customer",
                            Email = "jamiesGetsBilled@somedomain.com",
                            FirstName = "James",
                            LastName = "Bill"
                        });
                });

            modelBuilder.Entity("Data.CarListing", b =>
                {
                    b.HasOne("Data.User", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.User", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
